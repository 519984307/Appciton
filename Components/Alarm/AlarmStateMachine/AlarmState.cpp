/**
 ** This file is part of the nPM project.
 ** Copyright (C) Better Life Medical Technology Co., Ltd.
 ** All Rights Reserved.
 ** Unauthorized copying of this file, via any medium is strictly prohibited
 ** Proprietary and confidential
 **
 ** Written by Bingyun Chen <chenbingyun@blmed.cn>, 2018/8/3
 **/


#include "AlarmState.h"

/**************************************************************************************************
 * 构造。
 *************************************************************************************************/
AlarmState::AlarmState(ALarmStateType type) : QObject(), _type(type), _timerID(0)
{
}

/**************************************************************************************************
 * 启动定时器。
 *************************************************************************************************/
void AlarmState::beginTimer(int interval)
{
    if (0 == _timerID)
    {
        _timerID = startTimer(interval);
    }
}

/**************************************************************************************************
 * 关闭定时器。
 *************************************************************************************************/
void AlarmState::endTimer()
{
    if (0 != _timerID)
    {
        killTimer(_timerID);
        _timerID = 0;
    }
}

/**************************************************************************************************
 * 状态进入。
 *************************************************************************************************/
void AlarmState::enter()
{
}

/**************************************************************************************************
 * 状态退出。
 *************************************************************************************************/
void AlarmState::exit()
{
}

/**************************************************************************************************
 * 事件处理。
 *************************************************************************************************/
void AlarmState::handAlarmEvent(AlarmStateEvent /*event*/, unsigned char */*data*/, unsigned /*len*/)
{
}

/**************************************************************************************************
 * 定时器事件处理。
 *************************************************************************************************/
void AlarmState::timerEvent(QTimerEvent *e)
{
    Q_UNUSED(e)
}

