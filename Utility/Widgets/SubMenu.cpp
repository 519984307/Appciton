#include "SubMenu.h"
#include "LabelButton.h"
#include <QKeyEvent>
#include <QStackedWidget>
#include <QScrollBar>
#include <QPainter>
#include <QApplication>
#include <Debug.h>

/**************************************************************************************************
 * 子类布局前应调用。
 *************************************************************************************************/
void SubMenu::startLayout(void)
{
    //主布局控件
    mainLayout = new QVBoxLayout();
    mainLayout->setContentsMargins(0, 0, 0, 0);
    mainLayout->setSpacing(2);

    //子类布局
    layoutExec();/*多态方式，重写此虚函数 在布局的过程中添加业务逻辑，与界面组合为gui线程，配合通信线程处理需求*/

    setLayout(mainLayout);/*布局显示*/
}

/**************************************************************************************************
 * Show事件处理。
 *************************************************************************************************/
void SubMenu::showEvent(QShowEvent *e)
{
    readyShow();
    QWidget::showEvent(e);
}

/**************************************************************************************************
 * Hide事件处理。
 *************************************************************************************************/
void SubMenu::hideEvent(QHideEvent *e)
{
    readyhide();
    QWidget::hideEvent(e);
}

/***************************************************************************************************
 * 处理键盘和码盘事件（聚焦切换）
 **************************************************************************************************/
void SubMenu::keyPressEvent(QKeyEvent *e)
{
//    int fitsrIndex = _enableTitle ? 1 : 0;
//    QWidget *firstWin = mainLayout->itemAt(fitsrIndex)->widget();
//    QWidget *lastWin = mainLayout->itemAt(mainLayout->count() - 1)->widget();
//
//    if (NULL == firstWin || NULL == lastWin)
//    {
//        QWidget::keyPressEvent(e);
//        return;
//    }

    switch (e->key())
    {
        case Qt::Key_Up:
        case Qt::Key_Left:
            focusPreviousChild();
            break;
        case Qt::Key_Down:
        case Qt::Key_Right:
            focusNextChild();
            break;
        default:
            break;
    }

    QWidget::keyPressEvent(e);
}

/**************************************************************************************************
 * Show之前调用。
 *************************************************************************************************/
void SubMenu::readyShow(void)
{

}

/**************************************************************************************************
 * Hide之前调用。
 *************************************************************************************************/
void SubMenu::readyhide(void)
{

}

/**************************************************************************************************
 * 布局，由子类实现。
 *************************************************************************************************/
void SubMenu::layoutExec(void)
{

}

/**************************************************************************************************
 * 设置描述信息。
 *************************************************************************************************/
void SubMenu::setDesc(const QString &desc)
{
    _menuDesc = desc;
    emit titleChanged();
}

/**************************************************************************************************
 * 返回按钮槽函数。
 *************************************************************************************************/
void SubMenu::_returnBtnSlot()
{
    emit returnItemList();
}

/**************************************************************************************************
 * 设置菜单寬高。
 * 参数:
 *     width:宽度
 *     height:高度
 *************************************************************************************************/
void SubMenu::setMenuSize(int width, int height)
{
    _menuWidth = width;
    _menuHeight = height;
    setFixedWidth(width);
}

/**************************************************************************************************
 * 聚焦第一个item
 *************************************************************************************************/
void SubMenu::focusFirstItem()
{
    setFocus();
    focusNextPrevChild(true);
}

/**************************************************************************************************
 * 聚焦最后一个item
 *************************************************************************************************/
void SubMenu::focusLastItem()
{
    setFocus();
    focusNextPrevChild(false);
}

/**************************************************************************************************
 * 构造。
 *************************************************************************************************/
SubMenu::SubMenu(const QString &name):_enableTitle(false)
{
    setFocusPolicy(Qt::NoFocus);
    _menuName = name;
    _menuDesc = name + "Desc";
}
/**************************************************************************************************
 * 析构。
 *************************************************************************************************/
SubMenu::~SubMenu()
{
}
