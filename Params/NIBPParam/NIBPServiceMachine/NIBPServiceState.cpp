#include "NIBPServiceState.h"

NIBPProviderIFace *NIBPServiceState::provider_service = NULL;

/**************************************************************************************************
 * 设置超时并启动计时。
 *************************************************************************************************/
void NIBPServiceState::setTimeOut(int timeOut)
{
    _timeOut = timeOut;
    _elapseTime.restart();
    timeStart = true;
}

/**************************************************************************************************
 * 是否超时。
 *************************************************************************************************/
bool NIBPServiceState::isTimeOut(void)
{
    if ((_elapseTime.elapsed() > _timeOut) && timeStart)
    {
        timeStart = false;
        return true;
    }

    return false;
}

/**************************************************************************************************
 * 获取时间流逝。
 *************************************************************************************************/
int NIBPServiceState::elapseTime(void)
{
    return _elapseTime.elapsed();
}

void NIBPServiceState::timeStop()
{
    timeStart = false;
}



/**************************************************************************************************
 * 获取状态对象的名字。
 *************************************************************************************************/
NIBPServiceStateType NIBPServiceState::type(void)
{
    return _type;
}

/**************************************************************************************************
 * 设置Provider对象。
 *************************************************************************************************/
void NIBPServiceState::setProvider(NIBPProviderIFace *p)
{
    provider_service = p;
}

/**************************************************************************************************
 * 构造。
 *************************************************************************************************/
NIBPServiceState::NIBPServiceState(NIBPServiceStateType type)
{
    provider_service = NULL;
    _type = type;
}

/**************************************************************************************************
 * 析构。
 *************************************************************************************************/
NIBPServiceState::~NIBPServiceState()
{

}
